{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\react-app\\\\todo-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./asset/main.scss\";\nimport Header from \"./components/Header\";\nimport ListItem from \"./components/ListItem\";\nimport Footer from \"./components/Footer\";\n\nconst filterByStatus = (listItem = [], status = '', id) => {\n  switch (status) {\n    case 'ACTIVE':\n      return listItem.filter(item => !item.isCompleted);\n\n    case 'COMPLETED':\n      return listItem.filter(item => item.isCompleted);\n\n    case 'REMOVE':\n      return listItem.filter(item => item.id !== id);\n\n    default:\n      return listItem;\n  }\n};\n\nconst countCompleted = (listItem = []) => {\n  return listItem.filter(item => item.isCompleted);\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = (item = {}) => {\n      const listItem = this.state.listItem;\n      listItem.push(item);\n      this.setState({\n        listItem\n      });\n    };\n\n    this.markCompleted = (id = '') => {\n      const {\n        listItem\n      } = this.state;\n      let isCheckedAll = true;\n      const updatedlistItem = listItem.map(item => {\n        if (!item.isCompleted && item.id !== id || item.isCompleted && item.id === id) {\n          isCheckedAll = false;\n        }\n\n        if (item.id === id) {\n          return { ...item,\n            isCompleted: !item.isCompleted\n          };\n        }\n\n        return item;\n      });\n      this.setState({\n        isCheckedAll,\n        listItem: updatedlistItem\n      });\n    };\n\n    this.removeTodo = (id = '') => {\n      this.setState(prevState => ({\n        listItem: filterByStatus(prevState.listItem, 'REMOVE', id)\n      }));\n    };\n\n    this.clearCompleted = () => {\n      this.setState(preState => ({\n        listItem: countCompleted(preState.listItem)\n      }));\n    };\n\n    this.state = {\n      listItem: [],\n      isCheckedAll: false,\n      status: 'ALL',\n      todoEditingId: ''\n    };\n  }\n\n  render() {\n    const {\n      listItem,\n      isCheckedAll,\n      status\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        addItem: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        listItem: filterByStatus(listItem, status),\n        markCompleted: this.markCompleted,\n        isCheckedAll: isCheckedAll,\n        removeTodo: this.removeTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        activeButton: status,\n        setStatusFilter: status => this.setState({\n          status\n        }),\n        clearCompleted: this.clearCompleted,\n        numOfItem: countCompleted(listItem).length,\n        numOfTodos: listItem.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/react-app/todo-app/src/App.js"],"names":["React","Header","ListItem","Footer","filterByStatus","listItem","status","id","filter","item","isCompleted","countCompleted","App","Component","constructor","props","addItem","state","push","setState","markCompleted","isCheckedAll","updatedlistItem","map","removeTodo","prevState","clearCompleted","preState","todoEditingId","render","length"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport \"./asset/main.scss\"\r\nimport Header from \"./components/Header\"\r\nimport ListItem from \"./components/ListItem\"\r\nimport Footer from \"./components/Footer\"\r\nconst filterByStatus = (listItem = [], status = '', id) => {\r\n  switch (status) {\r\n    case 'ACTIVE':\r\n      return listItem.filter(item => !item.isCompleted)\r\n    case 'COMPLETED':\r\n      return listItem.filter(item => item.isCompleted)\r\n    case 'REMOVE':\r\n      return listItem.filter(item => item.id !== id)\r\n    default:\r\n      return listItem\r\n  }\r\n}\r\n\r\nconst countCompleted = (listItem = []) => {\r\n  return listItem.filter(item => item.isCompleted)\r\n}\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      listItem: [],\r\n      isCheckedAll: false,\r\n      status: 'ALL',\r\n      todoEditingId: ''\r\n    }\r\n  }\r\n  addItem = (item = {}) => {\r\n    const listItem = this.state.listItem\r\n    listItem.push(item)\r\n    this.setState({\r\n      listItem      \r\n    })\r\n  }\r\n  \r\n  markCompleted = (id = '') => {\r\n    const { listItem } = this.state\r\n    let isCheckedAll = true\r\n    const updatedlistItem = listItem.map(item => {\r\n      if ((!item.isCompleted && item.id !== id) || (item.isCompleted && item.id === id)) {\r\n        isCheckedAll = false\r\n      }\r\n      if (item.id === id) {\r\n        return { ...item, isCompleted: !item.isCompleted }\r\n      }\r\n      return item\r\n    })\r\n    this.setState({\r\n      isCheckedAll,\r\n      listItem: updatedlistItem\r\n    })\r\n  }\r\n  removeTodo = (id = '') => {\r\n    this.setState(prevState => ({\r\n      listItem: filterByStatus(prevState.listItem, 'REMOVE', id)\r\n    }))\r\n  }\r\n  clearCompleted = () => {\r\n    this.setState(preState => ({\r\n      listItem: countCompleted(preState.listItem)\r\n    }))\r\n  }\r\n  render() {\r\n    const { listItem, isCheckedAll, status } = this.state\r\n    return (\r\n      <div className=\"todoapp\">\r\n        <Header addItem={this.addItem} />\r\n\r\n        <ListItem \r\n          listItem = {filterByStatus(listItem, status)}\r\n          markCompleted={this.markCompleted}\r\n          isCheckedAll={isCheckedAll}\r\n          removeTodo={this.removeTodo}\r\n        />\r\n\r\n        <Footer\r\n          activeButton={status}\r\n          setStatusFilter={(status) => this.setState({ status })}\r\n          clearCompleted={this.clearCompleted}\r\n          numOfItem={countCompleted(listItem).length}\r\n          numOfTodos={listItem.length}  \r\n          />\r\n          \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}